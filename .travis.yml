language: cpp

sudo: false

dist: xenial

git:
  depth: false

cache:
  bundler: true
  pip: true

env:
  global:
    - PIPENV_VENV_IN_PROJECT=1
    - PIPENV_IGNORE_VIRTUALENVS=1

jobs:
  include:
    - os: linux
      addons:
        apt:
          packages:
            - clang
            - cmake
            - gfortran
            - libboost-math-dev
      env:
        - CXX_COMPILER='clang++'
        - C_COMPILER='clang'
        - Fortran_COMPILER='gfortran'
        - BUILD_TYPE='release'
    - os: linux
      addons:
        apt:
          packages:
            - g++
            - gcc
            - cmake
            - gfortran
            - libboost-math-dev
      env:
        - CXX_COMPILER='g++'
        - C_COMPILER='gcc'
        - Fortran_COMPILER='gfortran'
        - BUILD_TYPE='release'
        - STATIC='--static'
    - os: linux
      addons:
        apt:
          packages:
            - cmake
            - g++
            - gcc
            - gfortran
            - lcov
            - libboost-math-dev
      env:
        - CXX_COMPILER='g++'
        - C_COMPILER='gcc'
        - Fortran_COMPILER='gfortran'
        - BUILD_TYPE='debug'
        - COVERAGE='--coverage'
    - stage: Danger Bot
      ruby: 2.5.3
      addons:
        apt:
          packages:
            - clang-format
      if: commit_message !~ /(skip bot|bot skip|skip danger|danger skip)/
      script:
        - |
          bundle install --gemfile=.ci/Gemfile
          BUNDLE_GEMFILE=.ci/Gemfile bundle exec danger --dangerfile=.ci/Dangerfile

before_install:
  - test -n $CC && unset CC
  - test -n $CXX && unset CXX
  - test -n $FC && unset FC

install:
  - pip install --user pipenv --upgrade
  - pipenv install --three

before_script:
  - ./.ci/report_versions.sh
  - cd $TRAVIS_BUILD_DIR
  - echo 'Build set up summary'

script:
  - |
    pipenv run cmake -H. -Bbuild \
                     -DCMAKE_CXX_COMPILER=$CXX_COMPILER \
                     -DCMAKE_C_COMPILER=$C_COMPILER \
                     -DCMAKE_Fortran_COMPILER=$Fortran_COMPILER \
                     -DCMAKE_BUILD_TYPE=$BUILD_TYPE \
                     -DCMAKE_INSTALL_PREFIX=$HOME/Software/pcmsolver
  #- |
  #  pipenv run python setup.py --cxx=$CXX_COMPILER \
  #                  --cc=$C_COMPILER \
  #                  --fc=$Fortran_COMPILER \
  #                  --type=$BUILD_TYPE \
  #                  $STATIC \
  #                  $COVERAGE \
  #                  --prefix=$HOME/Software/pcmsolver
  - |
    pipenv run cmake --build build --target install -- --jobs=2 VERBOSE=1
  - cd build
  - travis_wait 40 pipenv run python ../.ci/ci_test.py ctest --output-on-failure --verbose --parallel 2
  - pipenv run python ../.ci/ci_print_failing.py

after_success:
  - |
    if [[ "$COVERAGE" = "--coverage" ]]; then
      cd $TRAVIS_BUILD_DIR
      lcov --version
      lcov --directory . --capture --output-file coverage.info
      lcov --remove coverage.info '/usr/*' --output-file coverage.info
      lcov --remove coverage.info 'external/*' --output-file coverage.info
      lcov --remove coverage.info 'tests/*' --output-file coverage.info
      lcov --list coverage.info
      bash <(curl -s https://codecov.io/bash) -X gcov || echo "Codecov did not collect coverage reports"
    fi
